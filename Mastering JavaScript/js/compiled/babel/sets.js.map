{"version":3,"sources":["sets.js"],"names":[],"mappings":";;;;;;;;IACM,W;AAEF,2BAAc;AAAA;;AACV,aAAK,MAAL,GAAc,IAAI,GAAJ,EAAd;AACH;;;;sCAEa,I,EAAM;AAChB,gBAAI,CAAC,KAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,CAAL,EAA4B;AACxB,qBAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB;AACH,aAFD,MAGK;AACD,wBAAQ,GAAR,CAAY,uCAAuC,IAAnD;AACH;AACJ;;;yCAEgB,I,EAAM;AACnB,iBAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB;AACH;;;2CAEkB;AACf,iBAAK,MAAL,CAAY,KAAZ;AACH;;;iCAEQ;AACL,mBAAO,KAAK,MAAZ;AACH;;;;;;;;;AAIL,IAAI,MAAM,IAAI,GAAJ,EAAV;AACA,IAAI,GAAJ,CAAQ,IAAR;AACA,IAAI,GAAJ,CAAQ,SAAR;AACA,IAAI,GAAJ,CAAQ,SAAR,E;AACA,IAAI,GAAJ,CAAQ,EAAC,MAAM,KAAP,EAAc,MAAM,SAApB,EAAR;AACA,QAAQ,GAAR,CAAY,IAAI,IAAhB;AACA,IAAI,IAAI,GAAJ,CAAQ,SAAR,CAAJ,EAAwB,QAAQ,GAAR,CAAY,WAAZ;AACxB,IAAI,MAAJ,CAAW,SAAX,E;AACA,IAAI,KAAJ,G;;;AAIA,IAAI,QAAQ,IAAI,WAAJ,EAAZ;AACA,MAAM,aAAN,CAAoB,IAApB;AACA,MAAM,aAAN,CAAoB,SAApB;AACA,MAAM,aAAN,CAAoB,SAApB;;AAEA,IAAI,WAAW,MAAM,MAAN,EAAf;;;AAGA,SAAS,OAAT,CAAiB,UAAS,IAAT,EAAe;AAC5B,YAAQ,GAAR,CAAY,oCAAoC,IAAhD;AACH,CAFD;;AAIA,QAAQ,GAAR,CAAY,IAAZ;AACA,SAAS,OAAT,CAAiB;AAAA,WAAQ,QAAQ,GAAR,CAAY,oCACL,uBADK,GACqB,IADjC,CAAR;AAAA,CAAjB;;AAGA,QAAQ,GAAR,CAAY,IAAZ;;;;;;AACA,yBAAiB,QAAjB,8HAA2B;AAAA,YAAlB,IAAkB;;AACvB,gBAAQ,GAAR,CAAY,yCAAyC,IAArD;AACH;;;;;;;;;;;;;;;;AAED,IAAI,MAAM,SAAS,MAAT,GAAkB,IAAlB,GAAyB,KAAnC;AACA,QAAQ,GAAR,CAAY,GAAZ;;;AAIA,QAAQ,GAAR,CAAY,IAAZ;AACA,IAAI,SAAS,SAAS,MAAtB;AACA,IAAI,SAAS,IAAI,GAAJ,CAAQ,QAAR,CAAb;AACA,OAAO,OAAP,CAAe,UAAS,IAAT,EAAe;AAC1B,YAAQ,GAAR,CAAY,sCAAsC,IAAlD;AACH,CAFD;;AAIA,MAAM,gBAAN;AACA,QAAQ,GAAR,CAAY,8CAA8C,MAAM,MAAN,GAAe,IAAzE","file":"sets.js","sourcesContent":["//Using Set\r\nclass Departments {\r\n\r\n    constructor() {\r\n        this._depts = new Set();\r\n    }\r\n\r\n    addDepartment(dept) {\r\n        if (!this._depts.has(dept)) {\r\n            this._depts.add(dept);\r\n        }\r\n        else {\r\n            console.log('Duplicate department was blocked: ' + dept);\r\n        }\r\n    }\r\n\r\n    removeDepartment(dept) {\r\n        this._depts.delete(dept);\r\n    }\r\n\r\n    clearDepartments() {\r\n        this._depts.clear();\r\n    }\r\n\r\n    getSet() {\r\n        return this._depts;\r\n    }\r\n}\r\n\r\n//Simple example of Set\r\nvar set = new Set();\r\nset.add('HR');\r\nset.add('Finance');\r\nset.add('Finance'); //Duplicate ignored\r\nset.add({name: 'GIS', desc: 'Mapping'});\r\nconsole.log(set.size);\r\nif (set.has('Finance')) console.log('Found it!');\r\nset.delete('Finance'); //Delete single item\r\nset.clear(); //Clear all items\r\n\r\n\r\n//Using Departments (which wraps a Set)\r\nvar depts = new Departments();\r\ndepts.addDepartment('HR');\r\ndepts.addDepartment('Finance');\r\ndepts.addDepartment('Finance');\r\n\r\nlet allDepts = depts.getSet();\r\n\r\n//Iterate through the set\r\nallDepts.forEach(function(dept) {\r\n    console.log('Found department using forEach ' + dept);\r\n});\r\n\r\nconsole.log('\\n');\r\nallDepts.forEach(dept => console.log('Found department using forEach ' + \r\n                                'with arrow function: ' + dept));\r\n\r\nconsole.log('\\n');\r\nfor (let dept of allDepts) {\r\n    console.log('Found department using for of loop: ' + dept);\r\n}\r\n\r\nlet val = allDepts.values().next().value;\r\nconsole.log(val);\r\n\r\n\r\n//Add current set into a new one using value\r\nconsole.log('\\n');\r\nvar values = allDepts.values;\r\nvar depts2 = new Set(allDepts);\r\ndepts2.forEach(function(dept) {\r\n    console.log('Iterating through depts2 values: ' + dept);\r\n});\r\n\r\ndepts.clearDepartments();\r\nconsole.log('\\nClearing all departments: Size is now: ' + depts.getSet().size);"],"sourceRoot":"/source/"}